---
# file: roles/cpanel/tasks/main.yml
#
# cpanel Role
# Task for handling the cPanel config and install
#

- name: Check whether cPanel is installed
  command: grep -q "Congratulations! Your installation of cPanel & WHM" /var/log/cpanel-install.log
  register: cpanel_check
  always_run: true
  failed_when: false
  changed_when: false
  tags: cpanel

- name: Register cpanel_installed variable
  set_fact:
    cpanel_installed: true
  when: cpanel_check.rc == 0
  tags: cpanel

- name: cPanel Package Pre-requisites
  include: yum.yml
  when: cpanel_installed is not defined

- name: cPanel Folder Structure
  include: folders.yml
  when: cpanel_installed is not defined

- name: cPanel Custom Configs
  include: files.yml
  when: cpanel_installed is not defined

- name: Disable SELinux
  include: selinux.yml
  when: cpanel_installed is not defined
  
- name: cPanel Installer Task
  include: install.yml
  when: cpanel_installed is not defined

- name: cPanel Post Install Task
  include: post-install.yml
  when: cpanel_install_completed is defined and cpanel_install_completed.changed

- name: fail the play if the previous command did not succeed
  fail:
    msg: "cPanel is not installed, or the install failed.  Play aborting!"
  when: cpanel_install_completed is not defined

- name: Get installed version of cPanel
  shell: "/usr/local/cpanel/cpanel -V"
  changed_when: false
  always_run: yes
  register: cpanel_version_raw
  tags: always

- name: Create cpanel_version variable.
  set_fact:
    cpanel_version: "{{ cpanel_version_raw.stdout.split()[0] }}"
  tags: always

- name: Create cpanel_build_version variable.
  set_fact:
    cpanel_build_version: "{{ cpanel_version_raw.stdout.split()[2].strip(')') }}"
  tags: always

## Considerations
# Installing cPanel creates /root/installer.lock
# Installer logs to /var/log/cpanel-install.log
# If the installer fails, both files may still exist even if cPanel is not installed
# not sure how to handle a failed install or an ssh connection failure...

#####################
# If this happens:
# TASK [cpanel : Install cPanel] *************************************************
# fatal: [centos1.lithiumdev.com]: FAILED! => {"failed": true, "msg": "ERROR! Timeout (12s) waiting for privilege escalation prompt: "}
#
# The playbook can be re-ran, cPanel will detect that an install is in progress and not start it again
# Ansible will just sit at the task:
# TASK [cpanel : Install cPanel] *************************************************

# NEVERMIND!!!  The command fails because installer.lock exists
